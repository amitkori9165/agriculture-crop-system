package com.admin.services;

import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
//import org.springframework.web.bind.annotation.RequestBody;

import org.springframework.web.client.RestTemplate;

import com.admin.model.Crop;

import com.admin.exception.CropAlreadyExistsException;
import com.admin.exception.CropNotFoundException;

import jakarta.validation.Valid;

@Service
public class AdminCropService {
    
    @Autowired 
    RestTemplate rest;
    final String ROOT_URL1 = "http://localhost:8080/crops";
    
    public List<Crop> showAllCrops() {
    	
        Crop[] cropArray = rest.getForEntity(ROOT_URL1+"/showAllCrops", Crop[].class).getBody();
        List<Crop> cropList = Arrays.asList(cropArray);
        if(cropList.isEmpty()) {
        	throw new CropNotFoundException("No crops found in database...!");
        }
        return cropList;
    }

    public List<Crop> getCropByName(String cropName) {
//        Crop crop = rest.getForObject(ROOT_URL1+"/showCropsByName/"+cropName, Crop.class);
//        if (crop != null) {
//            return Optional.of(crop);
//        } else {
//            throw new CropNotFoundException("Crop: " + cropName + " not found in database...!");
//        }
    	
    }
    
    public String addCrop(@Valid Crop crop) {
    	
    	Crop[] cropArr = rest.getForEntity(ROOT_URL1 +"/showAllCrops", Crop[].class).getBody();
        List<Crop> crops = Arrays.asList(cropArr);
        for (Crop c : crops) {
            if (c.getCropId() == crop.getCropId()) {
                throw new CropAlreadyExistsException("Crop with ID: " + crop.getCropId() + " already present in database...!");
            }
        }
        
        rest.postForEntity(ROOT_URL1+"/addCrops", crop, Crop.class);
        return "Crop added successfully...!";
    }

    public String updateCrop(String cropName, @Valid Crop updatedCrop) {
        Optional<Crop> existingCrop = getCropByName(cropName);
        if (existingCrop.isPresent()) {
            rest.put(ROOT_URL1+"/updateCropsByName"+cropName, updatedCrop);
            return "Crop updated successfully...!";
        } else {
            throw new CropNotFoundException("Crop: " + cropName + " not found in database...!");
        }
    }

    public String deleteCrop(String cropName) {
        Optional<Crop> existingCrop = getCropByName(cropName);
        if (existingCrop.isPresent()) {
            rest.delete(ROOT_URL1+"/deleteCropsByName/"+cropName);
            return "Crop deleted successfully...!";
        } else {
            throw new CropNotFoundException("Crop: " + cropName + " not found in database...!");
        }
    }

    public String deleteAllCrops() {
        rest.delete(ROOT_URL1+"/deleteAllCrops");
        return "All crops removed from database...!";
    }
}