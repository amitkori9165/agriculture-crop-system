package com.admin.services;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.admin.exception.BookingNotFoundException;
import com.admin.exception.CropNotFoundException;
import com.admin.model.Booking;
import com.admin.model.Crop;

@Service
public class AdminBookingService {

	@Autowired
	RestTemplate restTemplate;

	final String ROOT_URI = "http://localhost:8080/bookings";
	final String ROOT_URI2 = "http://localhost:8080/crops";

	public List<Booking> getBookings() {

		Booking[] bookingArr = restTemplate.getForEntity(ROOT_URI + "/showAllBookings", Booking[].class).getBody();

		List<Booking> bookingList = Arrays.asList(bookingArr);
		if (bookingList.isEmpty()) {
			throw new BookingNotFoundException("No bookings found in database...!");
		}

		return bookingList;
	}

	public String updateBooking(int bookingId) {

		Booking booking = restTemplate.getForEntity(ROOT_URI + "/showBookingsById/" + bookingId, Booking.class)
				.getBody();

		if (booking == null) {
			throw new BookingNotFoundException("Booking ID: " + bookingId + " not found in database...!");
		}

//		Booking updatedBooking = null; 
//		for(Booking temp:bookingList) {
//			updatedBooking = temp;
//		}
		Crop crop = restTemplate.getForEntity(ROOT_URI2 + "/showCropsByBookingId/" + bookingId, Crop.class).getBody();
		if (crop == null) {
			throw new CropNotFoundException("Crop with booking ID:" + bookingId + " not found in database...!");
		}

		crop.setCropStatus("SOLD");
		restTemplate.put(ROOT_URI2 + "/updateCropsById/" + crop.getCropId(), crop);

		booking.setPaymentStatus("Approved");
		restTemplate.put(ROOT_URI + "/updateBookings/" + bookingId, booking);

		// Code for generating the receipt usign receipt-service Generate receipt

		return "Booking approved...!";
	}

	public String declineBooking(int bookingId) {

		Booking booking = restTemplate.getForEntity(ROOT_URI + "/showBookingsById/" + bookingId, Booking.class)
				.getBody();

		if (booking == null) {
			throw new BookingNotFoundException("Booking ID: " + bookingId + " not found in database...!");
		}

		Crop crop = restTemplate.getForEntity(ROOT_URI2 + "/showCropsByBookingId/" + bookingId, Crop.class).getBody();
		if (crop == null) {
			throw new CropNotFoundException("Crop with booking ID:" + bookingId + " not found in database...!");
		}

		crop.setCropStatus("UNSOLD");
		restTemplate.put(ROOT_URI2 + "/updateCropsById/" + crop.getCropId(), crop);

		booking.setPaymentStatus("DECLINED");
		restTemplate.put(ROOT_URI + "/updateBookings/" + bookingId, booking);

		// Code for generating the receipt usign receipt-service Generate receipt

		return "Booking declined...!";

//		return null;
	}
}
